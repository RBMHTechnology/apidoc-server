buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// --------------------------------------------------------------------------------------
// Project Configuration

// Java Settings
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
	jcenter()
}

dependencies {
	compile "org.springframework.boot:spring-boot-starter-web"
	compile "org.springframework.boot:spring-boot-starter-thymeleaf"
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "org.springframework.boot:spring-boot-devtools"
	compile "org.apache.httpcomponents:httpclient"
	compile "com.google.guava:guava:${guavaVersion}"

	testCompile "org.springframework.boot:spring-boot-starter-test"
}

// --------------------------------------------------------------------------------------
// Gradle Tasks

wrapper.gradleVersion = '4.5.1'

task sourcesJar(type: Jar, dependsOn: classes, description: 'Builds a sources jar artifact suitable for maven deployment.') {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc, description: 'Builds a javadoc jar artifact suitable for maven deployment.') {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

task testJar(type: Jar, dependsOn: testClasses, description: 'Builds a tests jar artifact suitable for maven deployment.') {
	classifier = 'tests'
	from sourceSets.test.output
}

// customizing the Manifest
tasks.withType(Jar) {
	manifest {
		attributes 'Implementation-Title': project.name
		attributes 'Implementation-Version': project.version
		attributes 'Implementation-Vendor': "Red Bull Media House GmbH"
		attributes 'Build-Date': new Date().format("yyyy-MM-dd HH:mm:ss")
	}
}

bootRun{
	if (project.hasProperty('applicationProperties')){
		systemProperty 'spring.config.location', "file:${applicationProperties}"
	}
}
